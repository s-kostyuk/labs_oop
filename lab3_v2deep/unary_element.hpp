//
// Created by Sergey Kostyuk (http://git.io/vBvMH) on 26.12.15.
//

/*****************************************************************************/

#ifndef _UNARY_ELEMENT_HPP_
#define _UNARY_ELEMENT_HPP_

/*****************************************************************************/

#include "element.hpp"

/*****************************************************************************/

class UnaryElement : Element {

	/*-----------------------------------------------------------------*/

public:

	/*-----------------------------------------------------------------*/

	enum class Type {
		BUFFER, INVERTOR
	};

	/*-----------------------------------------------------------------*/

	UnaryElement( Type _t );
	~UnaryElement() override = default;

	/*-----------------------------------------------------------------*/

	UnaryElement ( const UnaryElement & _p ) = delete;
	UnaryElement & operator = ( const UnaryElement & _p ) = delete;

	/*-----------------------------------------------------------------*/

	bool evaluate() const override;

	/*-----------------------------------------------------------------*/

private:

	/*-----------------------------------------------------------------*/

	const Type m_type;

	const Element * const m_input;

	/*-----------------------------------------------------------------*/

};

/*****************************************************************************/

UnaryElement::UnaryElement( Type _t )
		:   m_type( _t )
{ }

/*****************************************************************************/

#endif //_UNARY_ELEMENT_HPP_
